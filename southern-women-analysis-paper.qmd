---
title: "Two Mode Networks and Relational Similarity"
author: "Omar Lizardo"
date: "`r Sys.Date()`"
---

# Setup
```{r setup}
    knitr::opts_chunk$set(include = TRUE, echo = TRUE, warning = FALSE, message = FALSE)
    library(factoextra)
    library(ggpubr)
    library(here)
    library(igraph)
    library(kableExtra)
    library(migraph)
    library(sjPlot)
    library(tidyverse)
```

# Data
```{r Southern women data}
    A <- matrix(
         c(
          1, 1, 1, 1, 1,  1, 0, 1, 1,  0, 0, 0, 0, 0, 
          1, 1, 1, 0, 1,  1, 1, 1, 0,  0, 0, 0, 0, 0, 
          0, 1, 1, 1, 1,  1, 1, 1, 1,  0, 0, 0, 0, 0, 
          1, 0, 1, 1, 1,  1, 1, 1, 0,  0, 0, 0, 0, 0, 
          0, 0, 1, 1, 1,  0, 1, 0, 0,  0, 0, 0, 0, 0, 
          0, 0, 1, 1, 1,  1, 0, 1, 0,  0, 0, 0, 0, 0, 
          0, 0, 0, 1, 1,  1, 1, 1, 0,  0, 0, 0, 0, 0, 
          0, 0, 0, 1, 1,  0, 1, 1, 1,  0, 0, 0, 0, 0, 
          
          0, 0, 0, 0, 0,  0, 1, 1, 1,  0, 0, 1, 0, 0, 
          0, 0, 0, 0, 0,  0, 0, 1, 1,  1, 0, 1, 0, 0, 
          0, 0, 0, 0, 0,  0, 0, 1, 1,  1, 0, 1, 1, 1,
          0, 0, 0, 0, 0,  0, 1, 1, 1,  1, 0, 1, 1, 1,
          0, 0, 0, 0, 0,  0, 1, 0, 1,  1, 1, 1, 1, 1,
          0, 0, 0, 0, 0,  0, 1, 1, 0,  1, 1, 1, 0, 0,
          0, 0, 0, 0, 0,  0, 0, 0, 1,  0, 1, 0, 0, 0,
          0, 0, 0, 0, 0,  0, 0, 0, 1,  0, 1, 0, 0, 0, 
          
          0, 0, 0, 0, 0,  1, 0, 1, 1,  0, 0, 0, 0, 0,
          0, 0, 0, 0, 0,  0, 0, 1, 1,  0, 0, 0, 0, 0),
          ncol = 14, byrow = TRUE)
     w <- c("EVELYN", "LAURA", "THERESA", "BRENDA", "CHARLOTTE", "FRANCES", "ELEANOR", "RUTH", "VERNE", "MYRA", "KATHERINE", "SYLVIA", "NORA", "HELEN", "OLIVIA", "FLORA", "PEARL", "DOROTHY")
     e <- paste("E", c(1:14), sep = "")
     rownames(A) <- w
     colnames(A) <- e
     
     affil.el <- data.frame(matrix(ncol = 2, nrow = 0))
     k <- 1
     for (i in 1:nrow(A)) {
         for(j in 1:ncol(A)) {
             if (A[i, j] == 1) {
               affil.el[k, 1] = w[i]
               affil.el[k, 2] = e[j]
             k <- k + 1
                 }
             }
     }
  A
```

```{r Knoke/Diani Political Data}
    g1 <- mpn_RepSxP
    g2 <- mpn_DemSxP
    g <- g1 %u% g2
    g <- delete_vertices(g, c(63:117, 125, 166:188))
    V(g)$name
    affil.el <- data.frame(as_edgelist(g))
    r <- length(unique(affil.el$X1))
    c <- length(unique(affil.el$X2))
    B <- matrix(0, r, c)
    rownames(B) <- unique(affil.el$X1)
    colnames(B) <- unique(affil.el$X2)
    for (e in 1:nrow(affil.el)) {
      i <- which(rownames(B) == affil.el[e, 1])
      j <- which(colnames(B) == affil.el[e, 2])
      B[i, j] <- 1
    }
    B
```


# Functions

```{r Functions}
    get.dist <- function(x) {
      x <- as.dist((1 - x)/2)
    return(x)
    }

    get.mds <- function(x) {
      x <- cmdscale(get.dist(x))
      colnames(x) <- c("Dim.1", "Dim.2")
    return(x)
    }
    
    get.clus <- function(x, k = 3) {
    # Hierarchical Clustering
      hclus.cent <- tibble(cluster = eclust(x, "hclust", method = "ward.D2",
                       k = k, graph = FALSE)$cluster) %>% 
      cbind(x)  %>% 
      group_by(cluster) %>% 
      summarize(across(starts_with("Dim"), mean)) %>% 
      dplyr::select(-1)
      # Getting Cluster Centroids
      km.clust <- eclust(x, "kmeans", 
                       k = hclus.cent, graph = FALSE)$cluster 
      n <- rownames(x)
      # K-Means Clustering
      x <- as_tibble(cbind(x, cluster = km.clust)) %>% 
        mutate(cluster = factor(cluster)) %>% 
        mutate(names = n)
    return(x)    
    }
    
    get.plot <- function(x, t = "", fsize = 14, pal = "Dark2") {
    # Plot and color by groups
      p <- ggscatter(x, x = "Dim.1", y = "Dim.2", 
              label = "names",
              color = "cluster",
              palette = pal,
              size = 1.5,
              font.label = fsize,
              label.rectangle = TRUE,
              ellipse.type = "convex",
              ellipse = TRUE,
              ellipse.alpha = 0.25,
              ellipse.border.remove = TRUE,
              repel = TRUE)
      p <- p + theme_minimal()
      p <- p + theme(legend.position = "none", 
                     axis.text = element_text(size = 16),
                     axis.title = element_text(size = 20),
                     title = element_text(size = 24)
                     )
      p <- p + scale_y_continuous(limits = c(-.4, .4))
      p <- p + scale_x_continuous(limits = c(-.6, .6))
      p <- p + ggtitle(t)
    return(p)
    }
```

# Analysis
```{r Clusters for actors and events based on gsr and tmrs (Southern Women)}
    source("Functions/tm.corr.dist.R")
    source("Functions/gen.sim.corr.abs.R")

    # Getting Generalized Similarities
    gs <- gen.sim.corr.abs(A)
    tm <- tm.corr.dist(A)
    
    #Performing MDS 
    mds.gs.a <- get.mds(gs$row.sims)
    mds.gs.e <- get.mds(gs$col.sims)
    
    mds.tm.a <- get.mds(tm$row.sims)
    mds.tm.e <- get.mds(tm$col.sims)
    
    # Performing Clustering}
    clus.gs.a <- get.clus(mds.gs.a)
    clus.gs.e <- get.clus(mds.gs.e)
    
    clus.tm.a <- get.clus(mds.tm.a)
    clus.tm.e <- get.clus(mds.tm.e)
```

```{r Plotting}
    get.plot(clus.gs.a, t = "Generalized Relational Similarity (Actors)")
    save_plot(here("Plots", "grs-actors-sw.png"), width = 30, height = 25)

    get.plot(clus.gs.e, fsize = 18,t = "Generalized Relational Similarity (Events)")
    save_plot(here("Plots", "grs-events0-sw.png"), width = 30, height = 25)
    
    get.plot(clus.tm.a, t = "Two-Mode Relational Similarity (Actors)")
    save_plot(here("Plots", "tmrs-actors-sw.png"), width = 30, height = 25)
    
    get.plot(clus.tm.e, fsize = 18, t = "Two-Mode Relational Similarity (Events)")
    save_plot(here("Plots", "tmrs-events-sw.png"), width = 30, height = 25)
```


```{r Clusters for actors and events based on gsr and tmrs (Senators)}
    source("Functions/tm.corr.dist.R")
    source("Functions/gen.sim.corr.abs.R")

    # Getting Generalized Similarities
    gs <- gen.sim.corr.abs(B)
    tm <- tm.corr.dist(B)
    
    #Performing MDS 
    mds.gs.a <- get.mds(gs$row.sims)
    mds.gs.e <- get.mds(gs$col.sims)
    
    mds.tm.a <- get.mds(tm$row.sims)
    mds.tm.e <- get.mds(tm$col.sims)
    
    # Performing Clustering}
    clus.gs.a <- get.clus(mds.gs.a)
    clus.gs.e <- get.clus(mds.gs.e)
    
    clus.tm.a <- get.clus(mds.tm.a)
    clus.tm.e <- get.clus(mds.tm.e)
```

```{r Plotting}
    get.plot(clus.gs.a, t = "Generalized Relational Similarity (Actors)")
    save_plot(here("Plots", "grs-actors-sb.png"), width = 30, height = 25)

    get.plot(clus.gs.e, fsize = 18,t = "Generalized Relational Similarity (Events)")
    save_plot(here("Plots", "grs-events-sb.png"), width = 30, height = 25)
    
    get.plot(clus.tm.a, t = "Two-Mode Relational Similarity (Actors)")
    save_plot(here("Plots", "tmrs-actors-sb.png"), width = 30, height = 25)
    
    get.plot(clus.tm.e, fsize = 18, t = "Two-Mode Relational Similarity (Events)")
    save_plot(here("Plots", "tmrs-events-sb.png"), width = 30, height = 25)
```


