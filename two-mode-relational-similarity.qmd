---
title: "Two Mode Networks and Relational Similarity"
author: "Omar Lizardo"
date: "`r Sys.Date()`"
---

# Setup
```{r setup}
    knitr::opts_chunk$set(include = TRUE, echo = TRUE, warning = FALSE, message = FALSE)
    library(dendextend)
    library(factoextra)
    library(ggpubr)
    library(here)
    library(sjPlot)
    library(tidyverse)
```

# Data
```{r Southern women data}
    A <- matrix(
         c(
          1, 1, 1, 1, 1,  1, 0, 1, 1,  0, 0, 0, 0, 0, 
          1, 1, 1, 0, 1,  1, 1, 1, 0,  0, 0, 0, 0, 0, 
          0, 1, 1, 1, 1,  1, 1, 1, 1,  0, 0, 0, 0, 0, 
          1, 0, 1, 1, 1,  1, 1, 1, 0,  0, 0, 0, 0, 0, 
          0, 0, 1, 1, 1,  0, 1, 0, 0,  0, 0, 0, 0, 0, 
          0, 0, 1, 1, 1,  1, 0, 1, 0,  0, 0, 0, 0, 0, 
          0, 0, 0, 1, 1,  1, 1, 1, 0,  0, 0, 0, 0, 0, 
          0, 0, 0, 1, 1,  0, 1, 1, 1,  0, 0, 0, 0, 0, 
          
          0, 0, 0, 0, 0,  0, 1, 1, 1,  0, 0, 1, 0, 0, 
          0, 0, 0, 0, 0,  0, 0, 1, 1,  1, 0, 1, 0, 0, 
          0, 0, 0, 0, 0,  0, 0, 1, 1,  1, 0, 1, 1, 1,
          0, 0, 0, 0, 0,  0, 1, 1, 1,  1, 0, 1, 1, 1,
          0, 0, 0, 0, 0,  0, 1, 0, 1,  1, 1, 1, 1, 1,
          0, 0, 0, 0, 0,  0, 1, 1, 0,  1, 1, 1, 0, 0,
          0, 0, 0, 0, 0,  0, 0, 0, 1,  0, 1, 0, 0, 0,
          0, 0, 0, 0, 0,  0, 0, 0, 1,  0, 1, 0, 0, 0, 
          
          0, 0, 0, 0, 0,  1, 0, 1, 1,  0, 0, 0, 0, 0,
          0, 0, 0, 0, 0,  0, 0, 1, 1,  0, 0, 0, 0, 0),
          ncol = 14, byrow = TRUE)
     w <- c("EVELYN", "LAURA", "THERESA", "BRENDA", "CHARLOTTE", "FRANCES", "ELEANOR", "RUTH", "VERNE", "MYRA", "KATHERINE", "SYLVIA", "NORA", "HELEN", "OLIVIA", "FLORA", "PEARL", "DOROTHY")
     e <- paste("E", c(1:14), sep = "")
     rownames(A) <- w
     colnames(A) <- e
     
     affil.el <- data.frame(matrix(ncol = 2, nrow = 0))
     k <- 1
     for (i in 1:nrow(A)) {
         for(j in 1:ncol(A)) {
             if (A[i, j] == 1) {
               affil.el[k, 1] = w[i]
               affil.el[k, 2] = e[j]
             k <- k + 1
                 }
             }
     }
     A
```

# Functions

```{r Functions}
    get.mds <- function(x) {
     # Compute MDS
     x <- (1 - x)/2
     x <- x %>%
       as.dist() %>% 
       cmdscale() 
     colnames(x) <- c("Dim.1", "Dim.2")
     return(x)
    }
    
    get.clus <- function(x, k = 3) {
    # Clustering
      hclus.cent <- tibble(cluster = eclust(x, "hclust", method = "ward.D2",
                       k = k, graph = FALSE)$cluster) %>% 
      cbind(x)  %>% 
      group_by(cluster) %>% 
      summarize(across(starts_with("Dim"), mean)) %>% 
      dplyr::select(-1)
      km.clust <- eclust(x, "kmeans", 
                       k = hclus.cent, graph = FALSE)$cluster 
      n <- rownames(x)
      x <- as_tibble(cbind(x, cluster = km.clust)) %>% 
        mutate(cluster = factor(cluster)) %>% 
        mutate(names = n)
      return(x)    
      }
    
    get.plot <- function(x, t = "", fsize = 14) {
    # Plot and color by groups
      p <- ggscatter(x, x = "Dim.1", y = "Dim.2", 
              label = "names",
              color = "cluster",
              palette = "Dark2",
              size = 1.5,
              font.label = fsize,
              label.rectangle = TRUE,
              ellipse.type = "convex",
              ellipse = TRUE,
              ellipse.alpha = 0.25,
              ellipse.border.remove = TRUE,
              repel = TRUE)
      p <- p + theme_minimal()
      p <- p + theme(legend.position = "none", 
                     axis.text = element_text(size = 16),
                     axis.title = element_text(size = 20),
                     title = element_text(size = 24)
                     )
      p <- p + ggtitle(t)
    return(p)
    }
```

# Analysis
```{r Clusters for actors and events based on gsr and tmrs}
    source("Functions/tm.corr.dist.R")
    source("Functions/gen.sim.corr.R")
    #Actors
    gs.a <- gen.sim.corr(A)
    gs.e <- gen.sim.corr(A)
    tm.a <- tm.corr.dist(A)
    tm.e <- tm.corr.dist(A)
```

```{r Performing MDS}
    mds.gs.a <- get.mds(gs.a$row.sims)
    mds.gs.e <- get.mds(gs.e$col.sims)
    mds.tm.a <- get.mds(tm.a$row.sims)
    mds.tm.e <- get.mds(tm.e$col.sims)
```

```{Performing Clustering}
    clus.gs.a <- get.clus(mds.gs.a)
    clus.gs.e <- get.clus(mds.gs.e)
    clus.tm.a <- get.clus(mds.tm.a)
    clus.tm.e <- get.clus(mds.tm.e)
```
   
# Plots
```{r Plotting}
    plot.gs.a <- get.plot(clus.gs.a, 
                          t = "Generalized Relational Similarity (Actors)")
    plot.gs.a
    save_plot(here("Plots", "grs-actors.png"), width = 30, height = 25)

    plot.gs.e <- get.plot(clus.gs.e, 
                          t = "Generalized Relational Similarity (Events)")
    plot.gs.e
    save_plot(here("Plots", "grs-events.png"), width = 30, height = 25)
    
    plot.tm.a <- get.plot(clus.tm.a, fsize = 18,
                          t = "Two-Mode Relational Similarity (Actors)")
    plot.tm.a
    save_plot(here("Plots", "tmrs-actors.png"), width = 30, height = 25)
    
    plot.tm.e <- get.plot(clus.tm.e, fsize = 18,
                          t = "Two-Mode Relational Similarity (Events)")
    plot.tm.e
    save_plot(here("Plots", "tmrs-events.png"), width = 30, height = 25)
```

```{r}
    get.dist <- function(x) {
     # Compute MDS
     x <- (1 - x)/2
     x <- x %>%
       as.dist()
    return(x)
    }
    dist.gs.a <- get.dist(gs.a$row.sims)
    dist.tm.a <- get.dist(tm.a$row.sims)
    hc.gs.a <- hclust(dist.gs.a, method = "complete")
    hc.tm.a <- hclust(dist.tm.a, method = "complete")
    dend.gs.a <- as.dendrogram(hc.gs.a)
    dend.tm.a <- as.dendrogram(hc.tm.a)
```


```{r}
    untang.dends <- dendlist(dend.gs.a, dend.tm.a) %>% 
      untangle(method = "step2side")
    png(file = here("Plots", "untang.png"), width=1200, height=600)
    plot(untang.dends, 
         main = paste("Entanglement =", round(entanglement(untang.dends), 2)),
         sub = paste(("Cophenetic Correlation ="), 
                     round(cor_cophenetic(dend.gs.a, dend.tm.a), 2)))
    dev.off()
    
```





































